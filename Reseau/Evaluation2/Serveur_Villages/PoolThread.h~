#ifndef POOLTHREAD_H
#define POOLTHREAD_H

#ifdef LIN
    using namespace std;
    #include<iostream>
    #include<fstream>
    #include<string>
#endif

#ifdef SUN
    #include<iostream.h>
    #include<fstream.h>
#endif
    
#include "properties.h"
#include "NetworkServer.h"
#include "Protocoles.h"
#include <pthread.h>
#include <list>
#include<map>
    
class PoolThread{
private:
    Protocoles *protocole;
    pthread_t threadHandle[NB_MAX_CLIENT];
    MySocket sockets[NB_MAX_CLIENT];
    int indiceCourant;
    pthread_mutex_t mutexIndiceCourant;
    pthread_cond_t condIndiceCourant;
    list<string> listeUtilisateurs;
    bool paused;
    bool stoped;
    pthread_mutex_t mutexPause;
public:
    PoolThread();
    PoolThread(Protocoles *protocole);
    ~PoolThread();
    void startThreads();
    void inject(int socket);
    void inject(int socket, int socketUrgence);
    static void* fctThread(void* param);
    map<int, string> getUsers();
    void setPause(bool val);
    void setStop(bool val);
    int getNbSockets();
    int getSocket(int num);
    int getSocketUrgence(int num);
    bool checkEtat();
};

#endif